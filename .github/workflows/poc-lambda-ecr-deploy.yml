# Test poc-lambda Python code; build Docker image; ECR deploy; add git tag.
on:
  push:
    branches:
      - 'feature/**'
  # Enable manual run; must also be in main branch to become visible though
  workflow_dispatch:
permissions:
  id-token: write  # required by aws-actions/configure-aws-credentials
  contents: write  # to push new git tag
jobs:
  poc-lambda-build:
    runs-on: ubuntu-latest
    env:
      python_version: '3.9'
      docker_image_name: 'poc-lambda'
      build_dir: 'poc-lambda'
      aws_region: eu-west-2
      ecr_registry_path: tre-v2
    steps:
      - name: Diagnostic info
        run: |
          printf 'github.event.repository.name=%s\n' "${{ github.event.repository.name }}"
          printf 'github.api_url=%s\n' "${{ github.api_url }}"
          printf 'env.python_version=%s\n' "${{ env.python_version }}"
      - name: Checkout current
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - name: Run tests
        run: |
          python3 --version
          cd ${{ env.build_dir }}
          python3 -m unittest discover ./tests -p 'test_*.py'
      - name: Get the version to use to tag this build
        id: build-tag
        uses: nationalarchives/tre-blueprint-test-repository/.github/actions/get-next-version@feature/DTE-433/lambda-deployment-example
        with:
          repo-name: ${{ github.event.repository.name }}
      - name: Diagnostic info
        run: |
          printf 'steps.build-tag.outputs.next-version=%s\n' "${{ steps.build-tag.outputs.next-version }}"
      - name: Build and push Docker image to AWS ECR
        uses: nationalarchives/tre-blueprint-test-repository/.github/actions/docker-build-and-deploy-to-ecr@feature/DTE-433/lambda-deployment-example
        with:
          dockerfile-dir: ${{ env.build_dir }}
          image-name: ${{ env.docker_image_name }}
          image-version: ${{ steps.build-tag.outputs.next-version }}
          ecr-registry-path: ${{ env.ecr_registry_path }}
          aws-region: ${{ env.aws_region }}
          role-to-assume: ${{ secrets.ROLE_ARN }}
      - name: Add Git tag for this build
        run: |
          git tag ${{ steps.build-tag.outputs.next-version }}
          git push origin ${{ steps.build-tag.outputs.next-version }}
