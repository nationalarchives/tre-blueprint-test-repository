name: terraform-environments-action
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      ROLE_ARN:
        required: true
      AWS_PARAM_STORE_TF_BACKEND_KEY:
        required: true
      AWS_PARAM_STORE_TF_VARS_KEY:
        required: true
      SLACK_TOKEN:
        required: true
      TF_VAR_TERRAFORM_ASSUME_ROLES:
        required: true


env:
  SLACK_CHANNEL: tna-test
  SLACK_WEBHOOK: ${{ secrets.SLACK_TOKEN }}
  GITHUB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  ENV: ${{ inputs.environment }}
  LOG_GROUP_NAME: "terraform-plan-${{ inputs.environment }}"
  LOG_STREAM_NAME: "run-id-${{ github.run_id }}-attempt-${{ github.run_attempt }}"
  AWS_PARAM_STORE_TF_BACKEND_KEY: ${{ secrets.AWS_PARAM_STORE_TF_BACKEND_KEY }}
  AWS_PARAM_STORE_TF_VARS_KEY: ${{ secrets.AWS_PARAM_STORE_TF_VARS_KEY }}
  TRIGGERING_ACTOR: ${{ github.triggering_actor }}
jobs:
  plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Configure AWS credentials for test AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: eu-west-2
          role-session-name: github-username-${{ github.triggering_actor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setting terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.5
          terraform_wrapper: false
      - name: Install python dependencies
        run: pip install -r script/requirements.txt
      - name: Terraform Plan
        run: |
          cd tre-platform
          ./plan.sh
      - name: Send to Slack
        run: | 
          pwd
          cd tre-platform
          python3 script/log.py
  approve:
    needs: 
      - plan
    runs-on: ubuntu-latest
    environment: poc-manual-step
    steps:
      - name: Manual Approve Info
        run: |
          terraform -v
          echo ${{ github.triggering_actor }}
          echo ${{ github.actor }}



          
