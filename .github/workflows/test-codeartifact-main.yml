name: Python application
on:
  push:
    branches:
      - feature/DTE-431-Create_an_example_workflow_for_releasing_software_component_to_Maven_Central_or_AWS_CodeArtifact
jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.MANAGEMENT_ACC_ARN }}
          aws-region: eu-west-2
          role-session-name: InternalGitHubActionsRoleName
      - name: Build and publish
        run: |
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain tna-test-domain --domain-owner ${{ secrets.MANAG_ACC_NUM }} --region eu-west-2 --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain tna-test-domain --domain-owner ${{ secrets.MANAG_ACC_NUM }} --repository tna-test-repo --region eu-west-2 --format pypi --query repositoryEndpoint --output text`          
          python setup.py sdist bdist_wheel --verbose
          twine upload dist/*


  
  
