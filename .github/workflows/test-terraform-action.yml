name: test-terraform-action
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      ROLE_ARN:
        required: true
      AWS_PARAM_STORE_TF_BACKEND_KEY:
        required: true
      AWS_PARAM_STORE_TF_VARS_KEY:
        required: true
jobs:
  plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Configure AWS credentials for test AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: eu-west-2
          role-session-name: role-session-name-${{ github.actor }}-${{ github.triggering_actor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Terraform Plan
        run: |
          terraform -v
          cd test-terraform    
          aws ssm get-parameters --name ${{ secrets.AWS_PARAM_STORE_TF_BACKEND_KEY }} --with-decryption --query "Parameters[*].Value" --output text >> backend.conf
          aws ssm get-parameters --name ${{ secrets.AWS_PARAM_STORE_TF_VARS_KEY }} --with-decryption --query "Parameters[*].Value" --output text >> terraform.tfvars
          pwd
          ls -la
          terraform init -backend-config=backend.conf
          terraform workspace list
          terraform workspace select ${{ inputs.environment }}
          terraform plan -var-file="terraform.tfvars" -out plan.out
          ls -la
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: test-terraform/plan.out
  approve:
    needs: plan
    runs-on: ubuntu-latest
    environment: poc-manual-step
    steps:
      - name: Manual Approve Info
        run: |
          echo ${{ github.triggering_actor }}
          echo ${{ github.actor }}
  apply:
    runs-on: ubuntu-latest
    needs: 
      - plan
      - approve
    environment: ${{ inputs.environment }}
    steps:
      - name: Configure AWS credentials for test AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: eu-west-2
          role-session-name: role-session-name-${{ github.actor }}-${{ github.triggering_actor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download math result for job 1
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
          path: test-terraform/
      - name: Test Terraform Init
        run: |
          ls -la
          cd test-terraform
          aws ssm get-parameters --name ${{ secrets.AWS_PARAM_STORE_TF_BACKEND_KEY }} --with-decryption --query "Parameters[*].Value" --output text >> backend.conf
          aws ssm get-parameters --name ${{ secrets.AWS_PARAM_STORE_TF_VARS_KEY }} --with-decryption --query "Parameters[*].Value" --output text >> terraform.tfvars
          terraform init -backend-config=backend.conf
          terraform workspace list
          terraform workspace select ${{ inputs.environment }}              
          terraform apply -input=false plan.out
